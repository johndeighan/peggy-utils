{
  "version": 3,
  "file": "PeggyTracers.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\PeggyTracers.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# PeggyTracers.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, isString, isArray, isHash,\r\n\tassert, croak, range, indented, undented,\r\n\tisEmpty, nonEmpty, keys, escapeStr,\r\n\t} from '@jdeighan/vllu'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport rpad = (str, len, ch=' ') =>\r\n\r\n\tassert (ch.length == 1), \"Not a char\"\r\n\textra = len - str.length\r\n\tif (extra < 0) then extra = 0\r\n\treturn str + ch.repeat(extra)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport lpad = (str, len, ch=' ') =>\r\n\r\n\tassert (ch.length == 1), \"Not a char\"\r\n\textra = len - str.length\r\n\tif (extra < 0) then extra = 0\r\n\treturn ch.repeat(extra) + str\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport zpad = (n, len) =>\r\n\r\n\tnStr = n.toString()\r\n\treturn lpad(nStr, len, '0')\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class NullTracer\r\n\r\n\ttrace: () ->\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DefaultTracer extends NullTracer\r\n\r\n\tconstructor: (@inputStr) ->\r\n\t\tsuper()\r\n\t\t@level = 0\r\n\r\n\ttrace: (event) ->\r\n\r\n\t\tswitch (event.type)\r\n\t\t\twhen 'rule.enter'\r\n\t\t\t\t@log(event)\r\n\t\t\t\t@level += 1\r\n\r\n\t\t\twhen 'rule.match', 'rule.fail'\r\n\t\t\t\t@level -= 1\r\n\t\t\t\t@log(event)\r\n\r\n\t\t\telse\r\n\t\t\t\t@log(event)\r\n\r\n\tlog: (event) ->\r\n\r\n\t\t{type, rule, location, result} = event\r\n\t\tdesc = () =>\r\n\t\t\t[cls, sub] = type.split('.')\r\n\t\t\tswitch cls\r\n\t\t\t\twhen 'rule'\r\n\t\t\t\t\treturn \"#{sub} <#{rule}>\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn type\r\n\r\n\t\tlocStr = () =>\r\n\t\t\tif notdefined(location) || !isHash(location)\r\n\t\t\t\treturn rpad('unknown', 12)\r\n\t\t\t{start: s, end: e} = location\r\n\t\t\tsl = zpad(s.line)\r\n\t\t\tsc = zpad(s.column)\r\n\t\t\tel = zpad(e.line)\r\n\t\t\tec = zpad(e.column)\r\n\t\t\treturn \"#{sl}:#{sc}-#{el}:#{ec}\"\r\n\r\n\t\tif (typeof console == 'object')\r\n\t\t\tconsole.log [\r\n\t\t\t\tlocStr(location)\r\n\t\t\t\t'  '.repeat(@level)\r\n\t\t\t\trpad(desc(event), 12)\r\n\t\t\t\tresult\r\n\t\t\t\t].join(' ')\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class PeggyTracer extends NullTracer\r\n\r\n\tconstructor: () ->\r\n\r\n\t\tsuper()\r\n\t\t@level = 0\r\n\r\n\tprefix: () ->\r\n\t\treturn \"│  \".repeat(@level)\r\n\r\n\tresult: () ->\r\n\t\tcount = if (@level==0) then 0 else @level-1\r\n\t\treturn \"│  \".repeat(count) + \"└─>\"\r\n\r\n\t# --- This allows unit testing\r\n\ttraceStr: (hInfo) ->\r\n\r\n\t\t{type, rule, location, result} = hInfo\r\n\t\tif defined(location)\r\n\t\t\t{line, column, offset} = location.start\r\n\t\tswitch type\r\n\r\n\t\t\twhen 'rule.enter'\r\n\t\t\t\treturn \"#{@prefix()}? #{rule}\"\r\n\r\n\t\t\twhen 'rule.fail'\r\n\t\t\t\tif defined(location)\r\n\t\t\t\t\treturn \"#{@result()} NO (at #{line}:#{column}:#{offset})\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{@result()} NO\"\r\n\r\n\t\t\twhen 'rule.match'\r\n\t\t\t\tif defined(result)\r\n\t\t\t\t\treturn \"#{@result()} #{JSON.stringify(result)}\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{@result()} YES\"\r\n\t\t\telse\r\n\t\t\t\treturn \"UNKNOWN type: #{type}\"\r\n\t\treturn\r\n\r\n\ttrace: (hInfo) ->\r\n\t\t# --- ignore whitespace rule\r\n\t\tif (hInfo.rule == '_')\r\n\t\t\treturn\r\n\r\n\t\tresult = @traceStr(hInfo)\r\n\t\tif isString(result)\r\n\t\t\tconsole.log result\r\n\t\telse if isArray(result)\r\n\t\t\tfor str in result\r\n\t\t\t\tconsole.log str\r\n\r\n\t\tswitch hInfo.type\r\n\t\t\twhen 'rule.enter'\r\n\t\t\t\t@level += 1\r\n\t\t\twhen 'rule.fail','rule.match'\r\n\t\t\t\t@level -= 1;\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DetailedTracer extends PeggyTracer\r\n\r\n\tconstructor: (@input, @hVars={}) ->\r\n\r\n\t\tsuper()\r\n\r\n\t# ..........................................................\r\n\r\n\tvarStr: () ->\r\n\r\n\t\tif isEmpty(@hVars)\r\n\t\t\treturn ''\r\n\r\n\t\tlParts = []\r\n\t\tfor varname in keys(@hVars)\r\n\t\t\tvalue = @hVars[varname]()\r\n\t\t\tlParts.push \"#{varname} = #{JSON.stringify(value)}\"\r\n\t\tif (lParts.length == 0)\r\n\t\t\treturn ''\r\n\t\telse\r\n\t\t\treturn ' (' + lParts.join(',') + ')'\r\n\r\n\t# ..........................................................\r\n\r\n\ttraceStr: (hInfo) ->\r\n\r\n\t\tstr = super hInfo\r\n\t\tif (hInfo.type != 'rule.fail') || isEmpty(@input)\r\n\t\t\treturn str\r\n\r\n\t\t{type, rule, location, result} = hInfo\r\n\t\tif defined(location)\r\n\t\t\t{offset} = location.start\r\n\t\t\treturn [\r\n\t\t\t\tstr\r\n\t\t\t\t\"#{escapeStr(@input, 'esc', {offset})}#{@varStr()}\"\r\n\t\t\t\t]\r\n\t\telse\r\n\t\t\treturn [\r\n\t\t\t\tstr\r\n\t\t\t\t\"#{escapeStr(@input, 'esc')}#{@varStr()}\"\r\n\t\t\t\t]\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- tracer can be:\r\n#        - undef\r\n#        - a string: 'peggy','default','detailed'\r\n#        - an object with a function property named 'trace'\r\n#        - a function\r\n\r\nexport getTracer = (tracer, input, hVars={}) =>\r\n\r\n\tif (tracer == null)\r\n\t\ttracer = undef\r\n\tswitch (typeof tracer)\r\n\t\twhen 'undefined'\r\n\t\t\treturn new NullTracer()\r\n\t\twhen 'object'\r\n\t\t\tif hasKey(tracer, trace)\r\n\t\t\t\treturn tracer\r\n\t\t\telse\r\n\t\t\t\treturn new NullTracer()\r\n\t\twhen 'function'\r\n\t\t\treturn {trace: tracer}\r\n\t\twhen 'string'\r\n\t\t\tswitch tracer\r\n\t\t\t\twhen 'default'\r\n\t\t\t\t\treturn new DefaultTracer()\r\n\t\t\t\twhen 'detailed'\r\n\t\t\t\t\treturn new DetailedTracer(input, hVars)\r\n\t\t\t\twhen 'peggy'\r\n\t\t\t\t\treturn undef\r\n\t\t\t\telse\r\n\t\t\t\t\treturn new NullTracer()\r\n"
  ]
}